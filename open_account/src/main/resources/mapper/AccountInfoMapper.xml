<?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.practice.open_account.dao.AccountInfoDAO">
	
	<!-- addAccountInfo -->
	<insert id="addAccountInfo" 
	 useGeneratedKeys="true" keyProperty="account_info_id">
		insert into account_info
		( 
		  user_id,name,
		  id_number,
		  id_address_id,id_issuance_date,id_overdue_date,id_licensing_authority,
		  contact_address_id,
		  postal_address_id,
		  security_id,
		  trade_type,
		  deposit_bank,
		  deposit_account,
		  deposit_password,
		  profession,
		  education,
		  email,
		  id_picture,
		  id_card_inverse_side,
		  risk_assessment_mark
		  )
		  values(
		      #{user_id},
		  	  #{name},
			  #{id_number},
			  #{id_address_id},
			  #{id_issuance_date},
			  #{id_overdue_date},
			  #{id_licensing_authority},
			  #{contact_address_id},
			  #{postal_address_id},
			  #{security_id},
			  #{trade_type},
			  #{deposit_bank},
			  #{deposit_account},
			  #{deposit_password},
			  #{profession},
			  #{education},
			  #{email},
			  #{id_picture},
			  #{id_card_inverse_side},
			  #{risk_assessment_mark}
			  )
	</insert>
	
	<!-- getAccountInfoByUserId -->
	<select id="getAccountInfoByUserId" 
		resultType="com.practice.open_account.entity.AccountInfo">
		select * from account_info where user_id = #{user_id}
	</select>
	
	<!-- updateAccountInfo -->
 	<update id="updateAccountInfo">
		update account_info set
		name=#{name}
		where user_id=#{user_id}
	</update>
	
	<update id="updatePicture">
		update account_info set
		id_picture=#{idPicture},
		id_card_inverse_side=#{idPictureInverse},
		heashot=#{headShot}
		where user_id = #{user_id}
	</update>
	
	<update id="updateSecurity">
		update account_info
		set 
		security_id =#{security_id},
		trade_type =#{trade_type}
		where user_id = #{user_id}
	</update>
	
	<update id="updateDeposit">
		update account_info
		set
		deposit_bank =#{deposit_bank},
		deposit_account = #{deposit_account},
		deposit_password = #{deposit_password},
		trade_password = #{trade_password}
		where user_id = #{user_id}
	</update>
	
	<!-- deleteAccountInfoByUserId -->
	<delete id="deleteAccountInfoByUserId">
		delete from account_info where user_id = #{user_id}
	</delete>	

	<!-- addAddress -->
	<insert id="addAddress"
		useGeneratedKeys="true" keyProperty="aid">
		insert into address(province,city,street,detail) 
		values(#{province},#{city},#{street},#{detail})
	</insert>
	
	<!-- getAddressByAId -->
	<select id="getAddressByAId" 
		resultType="com.practice.open_account.entity.Address">
		select * from address where aid=#{aid}
	</select>
	
	<!-- deleteAddressByAid -->
	<delete id="deleteAddressByAid">
		delete from address where aid=#{aid}
	</delete>
	
	<!-- updateAddress -->
	<update id="updateAddress">
		update address set
		province = #{province},
		city = #{city},
		street = #{street},
		detail = #{detail}
		where aid = #{aid}
	</update>
    
    <!-- update User status -->
    <update id="updateUserStatus">
    	update user set
    	status =#{status}
    	where user_id = #{user_id} 
    </update>

	<select id="getUserPair" resultType="java.util.HashMap">
		select ai.name value,
		      ai.user_id address
		      from account_info ai
		      WHERE ai.security_id=#{security_id}
	</select>
<select id="getAllocTimeById" resultType="java.lang.String">
	select  ai.allocated_time
	FROM account_info ai
	Where ai.user_id=#{user_id}
</select>
	<select id="getNetNameAndUserName" resultType="com.alibaba.fastjson.JSONObject">
		select ai.name username,
		       s.name netName
		      from account_info ai,security s
		      WHERE ai.user_id=#{user_id}
		      AND  s.security_id=ai.security_id
	</select>
	<update id="updateRiskAssessmentMark">
		update account_info set
		risk_assessment_mark = #{riskAssessmentMark}
		where user_id = #{user_id}
	</update>
	<update id="uploadId">
		update account_info set
		id_picture =#{image} where user_id = #{user_id}
	</update>
	<update id="uploadIdReverse">
		update account_info set
		id_card_inverse_side =#{image} where user_id = #{user_id}
	</update>
	<update id="uploadHeadShot">
		update account_info set
		heashot =#{image} where user_id = #{user_id}
	</update>
</mapper>


