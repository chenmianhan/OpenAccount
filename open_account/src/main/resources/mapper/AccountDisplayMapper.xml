<?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.practice.open_account.dao.AccountDisplayDAO">
	<!-- getCustomerId -->
	<select id="getCustomerIdByUserId" resultType="java.lang.String">
		select customer_id from customer_account
		where user_id =#{user_id} 
	</select>
	
	<!-- getFundAccount -->
	<select id="getFundAccountByCustomerId" resultType="com.practice.open_account.entity.FundAccount"
	>
		select * from fund_account
		where customer_id = #{customer_id} 
	</select>
	
	<!-- getCurrency -->
	<select id="getCurrencyByFundId" resultType="com.alibaba.fastjson.JSONObject">
		select currency_type,balance from currency
		where fund_id = #{fund_id}
	</select>
	
	<!-- getMaxFundId -->
	<select id="getMaxFundId" resultType = "java.lang.String">
		SELECT max(fund_id) FROM fund_account;
	</select>

	<select id="checkFund" resultType="java.lang.Integer">
        SELECT
        count(*)
        FROM
       account_info ai
        WHERE ai.trade_password=#{trade_password}
        AND ai.user_id = #{user_id}
    </select>
	<!-- insertFundAccount -->
	<insert id="addFundAccount">
		insert into fund_account
		(customer_id,
		fund_id,
		bank_account,
		bank,
		type,password)
		values(
		#{customer_id},
		#{fund_id},
		#{bank_account},
		#{bank},
		#{type},#{password}
		)
	</insert>
	<insert id="addTransaction">
		insert into transactions
		(customer_id, value, message, createtime)
		values(#{customer_id}, #{value}, #{message}, #{create_time})
	</insert>
	<delete id="deleteFundAccount" >
		delete from fund_account where fund_id = #{fund_id}
	</delete>
	<select id="getTradeType" resultType="java.lang.String">
		select ai.trade_type
		from account_info ai
		where ai.user_id=#{user_id}
	</select>
	<select id="getAccountInfo" resultType="com.alibaba.fastjson.JSONObject">
		select * from account_info
		where user_id = #{user_id}
	</select>
	<select id="getAddressByAId" resultType="com.alibaba.fastjson.JSONObject">
		select * from address
		where aid = #{aid}
	</select>
	<select id="getFundId" resultType="java.lang.String">
		select fa.fund_id from fund_account fa
		where fa.bank_account=#{bank_account}
		limit 1
	</select>
	<select id="getCustomerId" resultType="java.lang.String">
		select customer_id from fund_account
		where fund_id = #{fund_id}
	</select>
	<update id="updateUserInfo">
		update account_info
		set
		name = #{name},
		profession = #{profession},
		id_issuance_date = #{valDateStart},
		id_overdue_date = #{valDateEnd},
		id_licensing_authority = #{idCardAuthority},
		education = #{education},
		email = #{email}
		where
		user_id = #{user_id}
	</update>
	<update id="updateAddress">
		update address
		set
		province = #{province},
		city = #{city},
		street = #{street},
		detail = #{detail}
		where
		aid = #{aid}
	</update>
	<update id="recharge">
		update currency
		set
		balance = balance + #{amount}
		where
		fund_id = #{fund_id}
	</update>
	<update id="withdrawal">
		update currency
		set
		balance = balance - #{amount}
		where
		fund_id = #{fund_id}
	</update>
	<insert id="addCurrency">
		insert into currency
		(fund_id,
		currency_type,
		balance)

		values(
		#{fund_id},
		#{currency_type},
		#{balance}
		)
	</insert>
</mapper>